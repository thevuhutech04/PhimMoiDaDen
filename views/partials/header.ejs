<header>
    <div class="container">
        <div class="logo">
            <a href="/"><img src="/images/logoPhimMoi-NoBackground.png" alt="PhimMoiDaDen Logo"></a>
        </div>
        <nav>
            <ul>
                <li class="nav-item">
                    <a class="nav-link" href="/">Trang Chủ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/movies">Phim Mới</a>
                </li>
                <% console.log('User in header:', user); %>
                <% if (user && user.role_id === 1) { %>
                <li class="nav-item">
                    <a class="nav-link" href="/add-movie">Thêm Phim</a>
                </li>
                <% } %>
                <li class="dropdown">
                    <a href="#">Thể Loại</a>
                    <ul class="dropdown-menu">
                        <li><a href="/#hanh-dong">Hành động</a></li>
                        <li><a href="/#hai-huoc">Hài hước</a></li>
                        <li><a href="/#kinh-di">Kinh dị</a></li>
                        <li><a href="/#tinh-cam">Tình cảm</a></li>
                    </ul>
                </li>
                <li><a href="/contact">Liên Hệ</a></li>
            </ul>
        </nav>
        <div class="search-box">
            <form action="/search" method="GET" class="search-form">
                <input type="text" name="q" placeholder="Tìm kiếm phim..." value="<%= query %>">
                <button type="submit" class="search-button">
                    <i class="fas fa-search"></i>
                </button>
            </form>
        </div>
        <div class="bookmark">
            <% if (isAuthenticated) { %>
                <a href="/favorites" title="Phim Yêu Thích" class="favorite-link">
                    <i class="fas fa-heart"></i>
                </a>
            <% } else { %>
                <a href="#" id="login-option" title="Đăng nhập để xem phim yêu thích" class="favorite-link">
                    <i class="fas fa-heart"></i>
                </a>
            <% } %>
        </div>
        <div class="user">
            <a href="#"><img src="/images/profile.png" alt="User"></a>
            <ul class="user-dropdown">
                <% if (isAuthenticated) { %>
                    <li><span>Tài khoản: <%= user.username %></span></li>
                    <li><span>Email: <%= user.email %></span></li>
                    <li><a href="/logout" id="logout-option">Đăng Xuất</a></li>
                <% } else { %>
                    <li><a href="#" id="login-option">Đăng Nhập</a></li>
                    <li><a href="#" id="register-option">Đăng Ký</a></li>
                <% } %>
            </ul>
        </div>
    </div>
</header>

<!-- Thêm SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Xử lý đăng nhập
        const loginOptions = document.querySelectorAll('#login-option');
        const registerOptions = document.querySelectorAll('#register-option');
        const loginModal = document.getElementById('login-modal');
        const registerModal = document.getElementById('register-modal');

        // Mở modal đăng nhập
        loginOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                loginModal.style.display = 'flex';
                setTimeout(() => loginModal.classList.add('active'), 10);
            });
        });

        // Mở modal đăng ký
        registerOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                registerModal.style.display = 'flex';
                setTimeout(() => registerModal.classList.add('active'), 10);
            });
        });

        // Xử lý form đăng nhập
        const loginForm = document.getElementById('login-form');
        if (loginForm) {
            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                const loginData = {
                    email: formData.get('email'),
                    password: formData.get('password')
                };

                try {
                    const response = await fetch('/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(loginData)
                    });

                    const data = await response.json();

                    if (response.ok) {
                        loginModal.classList.remove('active');
                        setTimeout(() => loginModal.style.display = 'none', 300);
                        
                        Swal.fire({
                            title: 'Đăng nhập thành công!',
                            text: `Chào mừng bạn, ${loginData.email}!`,
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        throw new Error(data.message || 'Đăng nhập thất bại');
                    }
                } catch (error) {
                    Swal.fire({
                        title: 'Lỗi',
                        text: error.message,
                        icon: 'error'
                    });
                }
            });
        }

        // Xử lý form đăng ký
        const registerForm = document.getElementById('register-form');
        if (registerForm) {
            registerForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                const userData = {
                    username: formData.get('username'),
                    email: formData.get('email'),
                    password: formData.get('password')
                };

                try {
                    const response = await fetch('/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userData)
                    });

                    const data = await response.json();

                    if (response.ok) {
                        registerModal.classList.remove('active');
                        setTimeout(() => registerModal.style.display = 'none', 300);
                        
                        Swal.fire({
                            title: 'Đăng ký thành công!',
                            text: 'Vui lòng đăng nhập.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            loginModal.style.display = 'flex';
                            setTimeout(() => loginModal.classList.add('active'), 10);
                        });
                    } else {
                        throw new Error(data.message || 'Đăng ký thất bại');
                    }
                } catch (error) {
                    Swal.fire({
                        title: 'Lỗi',
                        text: error.message,
                        icon: 'error'
                    });
                }
            });
        }

        // Xử lý đóng modal
        const closeBtns = document.querySelectorAll('.modal .close');
        closeBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const modal = this.closest('.modal');
                modal.classList.remove('active');
                setTimeout(() => modal.style.display = 'none', 300);
            });
        });

        // Đóng modal khi click bên ngoài
        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('active');
                setTimeout(() => e.target.style.display = 'none', 300);
            }
        });
    });
</script>

<style>
    .search-form {
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        padding: 5px 10px;
    }

    .search-form input {
        background: none;
        border: none;
        color: white;
        padding: 5px;
        width: 200px;
        outline: none;
    }

    .search-form input::placeholder {
        color: rgba(255, 255, 255, 0.7);
    }

    .search-button {
        background: none;
        border: none;
        padding: 5px;
        cursor: pointer;
        color: white;
        transition: color 0.3s ease;
    }

    .search-button:hover {
        color: #ffd700;
    }

    .search-button i {
        font-size: 16px;
    }

    .favorite-link {
        color: white;
        font-size: 1.2rem;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%;
    }

    .favorite-link:hover {
        color: #e50914;
        background-color: rgba(255, 255, 255, 0.1);
    }

    .favorite-link i {
        transition: transform 0.3s ease;
    }

    .favorite-link:hover i {
        transform: scale(1.1);
    }

    .add-movie-link {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .add-movie-link i {
        font-size: 14px;
    }

    .add-movie-link:hover {
        color: #e50914;
    }
</style> 